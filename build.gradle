import org.apache.tools.ant.filters.ReplaceTokens

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/tutorial_java_projects.html
 */
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}

plugins {
    // Apply the java plugin to add support for Java
    id 'java'
    // Apply the application plugin to add support for building a CLI application
    id 'application'
    id 'com.palantir.docker' version '0.26.0'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    maven {
        url "https://nexus.iex.ec/repository/maven-public/"
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // iexec
    compile "com.iexec.common:iexec-common:$iexecCommonVersion"
    //compile files("../iexec-common/build/libs/iexec-common-${iexecCommonVersion}.jar")

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:27.1-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    // Dropbox
    compile 'com.dropbox.core:dropbox-core-sdk:3.1.1'

    // lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
    annotationProcessor "org.projectlombok:lombok:1.18.10"
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.11.2'
    
    //rest template
    compile group: 'org.springframework', name: 'spring-web', version: '5.2.4.RELEASE'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.4'
}

def mainClass = 'com.iexec.worker.tee.post.compute.App'

application {
    mainClassName = mainClass
}

//gradle run
application {
    // Define the main class for the application.
    mainClass = mainClass
}

// Jar with missing dependencies (app.jar)
jar {
    manifest {
        attributes(
                'Main-Class': mainClass
        )
    }
}

def app = 'app'
def fatJar = "${app}-all.jar"

// Jar with all dependencies (app-all.jar)
shadowJar {
    mainClassName = mainClass
    archiveBaseName.set(app)
    archiveVersion.set('') // remove version from name
}

docker {
    name 'nexus.iex.ec/' + rootProject.name + ':dev'
    dockerfile file('docker/Dockerfile.local')
    files('build/libs/' + fatJar)
    buildArgs([JAR_PATH: fatJar ])
}
tasks.docker.dependsOn tasks.build

task buildImage {
    dependsOn tasks.docker
}