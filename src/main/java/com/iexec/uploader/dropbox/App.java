/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.iexec.uploader.dropbox;

import com.dropbox.core.DbxException;
import com.dropbox.core.DbxRequestConfig;
import com.dropbox.core.v2.DbxClientV2;
import com.dropbox.core.v2.users.FullAccount;

import java.io.File;

public class App {
    //private static String ACCESS_TOKEN = "rhX12y6f6hAAAAAAAAAACUi3pFkWsMTWtDF6UuAFxqrIYLiaMugCxuUDuzCyBkqB";
    //private static String LOCAL_FILE_PATH = "/home/james/bla/0x1.zip";
    //private static String REMOTE_FILENAME = "0x1.zip";
    /*
      gradle clean build && java -jar  \
            -DLOCAL_FILE_PATH="/home/james/bla/0x1.zip" \
            -DREMOTE_FILENAME="0x1.zip" \
            -DACCESS_TOKEN="rhX12y6f6hAAAAAAAAAACUi3pFkWsMTWtDF6UuAFxqrIYLiaMugCxuUDuzCyBkqB" \
            build/libs/dropbox-uploader.jar

    */


    public static void main(String[] args) {
        System.out.println("dropbox-uploader app started");

        String accessToken = System.getProperty("ACCESS_TOKEN");
        if (accessToken == null || accessToken.isEmpty()){
            System.err.println("ACCESS_TOKEN missing (exiting)");
            System.exit(1);
        }

        String localFilePath = System.getProperty("LOCAL_FILE_PATH");
        if (localFilePath == null || localFilePath.isEmpty()){
            System.err.println("LOCAL_FILE_PATH missing (exiting)");
            System.exit(1);
        }

        String remoteFilename = System.getProperty("REMOTE_FILENAME");
        if (remoteFilename == null || remoteFilename.isEmpty()){
            System.err.println("REMOTE_FILENAME missing (exiting)");
            System.exit(1);
        }

        DbxRequestConfig config = DbxRequestConfig.newBuilder("").build();
        DbxClientV2 client = new DbxClientV2(config, accessToken);

        FullAccount account;
        try {
            account = client.users().getCurrentAccount();
            String loginMessage = String.format("Uploading file with token [localFile:%s, remoteFile:%s, tokenOwner:%s(%s)]",
                    localFilePath, remoteFilename, account.getEmail(), account.getName().getDisplayName());
            System.out.println(loginMessage);
        } catch (DbxException e) {
            System.err.println("Can't log to Dropbox with provided token (exiting)");
            System.exit(1);
        }

        boolean isUploaded = DropBoxService.uploadFile(client, new File(localFilePath), "/results/" + remoteFilename);

        if (!isUploaded){
            System.err.println("Upload failed (exiting)");
            System.exit(1);
        } else {
            System.out.println("Uploaded!");
            System.exit(0);
        }
    }
}
