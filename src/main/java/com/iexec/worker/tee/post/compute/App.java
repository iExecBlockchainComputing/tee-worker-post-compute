/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.iexec.worker.tee.post.compute;

import com.iexec.common.precompute.PreComputeExitCode;
import com.iexec.common.result.ComputedFile;
import com.iexec.worker.tee.post.compute.utils.EnvUtils;
import com.iexec.worker.tee.post.compute.web2.Web2ResultManager;
import lombok.extern.slf4j.Slf4j;

import static com.iexec.common.tee.TeeUtils.booleanFromYesNo;
import static com.iexec.common.worker.result.ResultUtils.RESULT_STORAGE_CALLBACK;
import static com.iexec.common.worker.result.ResultUtils.RESULT_TASK_ID;
import static com.iexec.worker.tee.post.compute.worflow.FlowManager.*;

@Slf4j
public class App {

    private App() {
    }

    public static void main(String[] args) {
        log.info("Tee worker post-compute started");

        int exitCode = PreComputeExitCode.SUCCESS.value();
        try {
            runPostCompute();
        } catch(PostComputeException e) {
            log.error("TEE post-compute failed with a known error " +
                            "[errorMessage:{}, errorCode:{}]", e.getExitCode(),
                    e.getExitCode().value(), e);
            exitCode = e.getExitCode().value();
        } catch (Exception e) {
            log.error("TEE post-compute failed with an unknown error", e);
            exitCode = PreComputeExitCode.UNKNOWN_ERROR.value();
        } finally {
            log.info("TEE post-compute finished");
            System.exit(exitCode);
        }
    }

    private static void runPostCompute() throws PostComputeException {
        boolean shouldCallback = booleanFromYesNo(EnvUtils.getEnvVar(RESULT_STORAGE_CALLBACK));
        String taskId = EnvUtils.getEnvVarOrThrow(RESULT_TASK_ID);

        ComputedFile computedFile = readComputedFile(taskId);

        buildResultDigestInComputedFile(computedFile, shouldCallback);

        if (!shouldCallback) {
            Web2ResultManager.encryptAndUploadResult(taskId);
        }

        signComputedFile(computedFile);
        sendComputedFileToHost(computedFile);
    }

}
